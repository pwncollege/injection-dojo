#!/usr/bin/exec-suid -- /usr/bin/env python3 -I

import psutil
import urllib
import atexit
import time
import sys
import os

from selenium import webdriver
from selenium.webdriver.firefox.options import Options as FirefoxOptions
from selenium.webdriver.firefox.service import Service as FirefoxService
from selenium.common.exceptions import TimeoutException, UnexpectedAlertPresentException

os.setuid(os.geteuid())
os.environ.clear()
os.environ["PATH"] = "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

options = FirefoxOptions()
options.add_argument("--headless")  
service = FirefoxService(log_path="/dev/null")
browser = webdriver.Firefox(service=service, options=options)
atexit.register(browser.quit)

open_ports = {s.laddr.port for s in psutil.net_connections(kind="inet") if s.status == "LISTEN"}
if 80 not in open_ports:
    print("Service doesn't seem to be running?")
    sys.exit(1)

challenge_url = "http://challenge.localhost:80"
url_parsed = urllib.parse.urlparse(challenge_url)
if url_parsed.hostname != "challenge.localhost":
    print("Hostname should be 'challenge.localhost'.")
    sys.exit(2)
if url_parsed.port not in {None, 80}:
    print("Port should be 80.")
    sys.exit(3)

print(f"Visiting {challenge_url}")
browser.get(challenge_url)

for _ in range(10):
    try:
        alert = browser.switch_to.alert
        alert_text = alert.text.strip()
        print(f"Alert found: {alert_text}")
        if alert_text == "PWNED":
            print("Correct alert received! Here's the flag:")
            print(open("/flag").read())
        else:
            print("Alert text was incorrect.")
        alert.accept()  # Close the alert box
        break
    except Exception:
        time.sleep(1)
else:
    print("No alert was triggered.")

browser.quit()
