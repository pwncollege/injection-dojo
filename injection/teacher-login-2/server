#!/usr/bin/exec-suid -- /usr/bin/env python3 -I

import flask, os, yaml

app = flask.Flask(__name__)

# ---------- ROUTES ----------

@app.route("/login", methods=["POST"])
def login():
    users = yaml.load(open("users.yaml"), Loader=yaml.Loader) or []

    username = flask.request.form.get("user", "")
    for entry in users:
        if entry.get("username") == username:
            if str(entry.get("is_teacher", "no")).lower() == "yes":
                return f"<p>Logged in as a teacher!<br/>{open('/flag').read()}</p>"
            return "Logged in … but not as a teacher. <a href='/'>Try again?</a>"

    return "No such user… <a href='/'>Try again?</a>"

@app.route("/add", methods=["POST"])
def add():
    entry = {
        "username": flask.request.form.get("user", ""),
        "is_teacher": "no"
    }

    db = yaml.safe_load(open("users.yaml")) or []
    db.insert(0, entry)                          
    open("users.yaml", "w").write(yaml.dump(db))
    return flask.redirect("/")

@app.route("/", methods=["GET"])
def index():
    db_contents = open("users.yaml").read()
    return f"""
        <h1>YAML Injection Login</h1>
        <p>Welcome! Can you log in as <code>teacher</code>?</p>

        <h2>Current Database (users.yaml)</h2>
        <pre>{flask.escape(db_contents)}</pre>

        <h2>Add a User</h2>
        <form action="/add" method="post">
            Username: <input name="user" autocomplete="off">
            <input type="submit" value="Add">
        </form>

        <h2>Login</h2>
        <form action="/login" method="post">
            Username: <input name="user" autocomplete="off">
            <input type="submit" value="Login">
        </form>
    """

# ---------- BOILERPLATE / SETUP ----------

# Ensure the database file exists.
if not os.path.exists("users.yaml"):
    open("users.yaml", "w").close()

app.secret_key = os.urandom(8)
app.config["SERVER_NAME"] = "challenge.localhost:80"
app.run("challenge.localhost", 80)
