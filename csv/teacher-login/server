#!/usr/bin/exec-suid -- /usr/bin/python3 -I

import html
import os
import tempfile
from pathlib import Path

from flask import Flask, redirect, request

app = Flask(__name__)

DB_PATH = Path("/challenge/users.txt")


def read_db() -> str:
    try:
        with DB_PATH.open("r", encoding="utf-8") as f:
            return f.read()
    except FileNotFoundError:
        return ""


@app.route("/login", methods=["POST"])
def login():
    user = (request.form.get("user") or "").rstrip("\r\n")

    try:
        with DB_PATH.open("r", encoding="utf-8") as f:
            for entry in f:
                entry = entry.strip()

                if not entry:
                    continue

                username, is_teacher, *_ = entry.split(",")

                if username == user:
                    if is_teacher.lower() == "yes":
                        with open("/flag", "r") as flag:
                            return f"<p>Logged in as a teacher! Here is your flag:<br/>{flag.read()}</p>"

                    return """Logged in ... but not as a teacher. <a href="/">Try again?</a>"""

        return """No such user... <a href="/">Try again?</a>"""
    except FileNotFoundError:
        DB_PATH.touch(exist_ok=True)

        return """TOCTOU? <a href="/">Try again?</a>"""
    except Exception:
        return """YOU SHALL NOT PASS!!!
        <form action="/reset" method="post" onsubmit="return confirm('Reset DB?');">
            <input type="submit" value="Reset Database">
        </form>
        """


@app.route("/add", methods=["POST"])
def add():
    user = (request.form.get("user") or "").rstrip("\r\n")
    data = read_db()

    db_dir = DB_PATH.parent
    with tempfile.NamedTemporaryFile(
        "w", encoding="utf-8", dir=db_dir, delete=False
    ) as tmp:
        tmp_path = Path(tmp.name)
        tmp.write(f"{user},no\n{data}".rstrip() + "\n")

    os.replace(tmp_path, DB_PATH)

    return redirect("/")


@app.route("/reset", methods=["POST"])
def reset():
    with DB_PATH.open("w", encoding="utf-8") as f:
        f.truncate(0)

    return redirect("/")


@app.route("/", methods=["GET"])
def index():
    data = read_db()

    return f"""
        <h1>The Login</h1>
        Welcome! Can you log in as teacher?

        <h2>The User Database</h2>
        <pre>
USERNAME,IS_TEACHER
{html.escape(data)}
        </pre>

        <h2>Add a User</h2>
        <form action="add" method="post">
            Username: <input name="user">
            <input type=submit value="Add">
        </form>

        <h2>Login</h2>
        <form action="login" method="post">
            Username: <input name="user">
            <input type=submit value="Login">
        </form>

        <h2>Admin</h2>
        <form action="/reset" method="post" onsubmit="return confirm('Reset DB?');">
            <input type="submit" value="Reset Database">
        </form>
    """


if __name__ == "__main__":
    DB_PATH.touch(exist_ok=True)  # make sure db exists

    app.secret_key = os.urandom(8)
    app.config["SERVER_NAME"] = "challenge.localhost:80"
    app.run("challenge.localhost", 80)
